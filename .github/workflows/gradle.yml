# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Setup MySQL
      uses: samin/mysql-action@v1
      with:
        character set server: 'utf8'
        mysql database: ${{ secrets.MYSQL_DATABASE }}
        mysql user: 'root'
        mysql password: ${{ secrets.MYSQL_PASSWORD }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: make application.properties
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources 
        touch ./application.properties 
        echo "${{ secrets.PROPERTIES }}" > ./application.properties
      shell: bash

    - name: Grant execute permission to Gradle wrapper
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: dev Docker build & push to prod
      if: contains(github.ref, 'dev')
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together .       
        docker push ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together

    - name: Deploy to dev
      uses: appleboy/ssh-action@master
      id: deploy-dev
      if: contains(github.ref, 'dev')
      with:
        host: ${{ secrets.HOST_DEV }}
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          sudo docker ps
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together
          sudo docker stop hanaro-trip-together
          sudo docker rm hanaro-trip-together
          sudo docker run -it -d -p 8080:8080 --name hanaro-trip-together ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together
          sudo docker image prune -f      
