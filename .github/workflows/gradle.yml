name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Log event details
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: ${{ secrets.MYSQL_DATABASE }}
          mysql user: 'root'
          mysql password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

          # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: make application.properties
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources 
          touch ./application.properties 
          echo "${{ secrets.PROPERTIES }}" > ./application.properties
        shell: bash

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: dev Docker build & push to prod
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'dev') }}
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together .       
          docker push ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together

      - name: Deploy to dev
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'dev') }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker ps
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together
            sudo docker stop hanaro-trip-together
            sudo docker rm hanaro-trip-together
            sudo docker run -it -d -p 8080:8080 --name hanaro-trip-together ${{ secrets.DOCKER_USERNAME }}/hanaro-trip-together
            sudo docker image prune -f
